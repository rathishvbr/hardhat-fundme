{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "int256",
          "name": "_initialAnswer",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_answer",
          "type": "int256"
        }
      ],
      "name": "updateAnswer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xe20f5e3ff4a35cb3fa510c02530f5de003e3dd01d431d120f953a04ee1bf54f5",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "642956",
    "logsBloom": "0x
    "blockHash": "0xeed523b23c25f4a2d049b40f19d780299dae5cefc03c19eb44795af8bdd93384",
    "transactionHash": "0xe20f5e3ff4a35cb3fa510c02530f5de003e3dd01d431d120f953a04ee1bf54f5",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "642956",
    "status": 1,
    "byzantium": true
  },
  "args": [
    8,
    "200000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "6ee8ac27c1b55c24662aa592899ce089",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"_initialAnswer\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"}],\"name\":\"updateAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockV3Aggregator.sol\":\"MockV3Aggregator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/mocks/MockV3Aggregator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract MockV3Aggregator is AggregatorV3Interface {\\n    uint8 public decimals;\\n    int256 public latestAnswer;\\n    uint256 public latestTimestamp;\\n    uint256 public latestRound;\\n\\n    mapping(uint256 => int256) public getAnswer;\\n    mapping(uint256 => uint256) public getTimestamp;\\n    mapping(uint256 => uint256) public getRound;\\n\\n    constructor(uint8 _decimals, int256 _initialAnswer) {\\n        decimals = _decimals;\\n        latestAnswer = _initialAnswer;\\n        latestTimestamp = block.timestamp;\\n        latestRound = 1;\\n        getAnswer[1] = _initialAnswer;\\n        getTimestamp[1] = block.timestamp;\\n        getRound[1] = 1;\\n    }\\n\\n    function updateAnswer(int256 _answer) public {\\n        latestAnswer = _answer;\\n        latestTimestamp = block.timestamp;\\n        latestRound++;\\n        getAnswer[latestRound] = _answer;\\n        getTimestamp[latestRound] = block.timestamp;\\n        getRound[latestRound] = latestRound;\\n    }\\n\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)\\n    {\\n        return (\\n            _roundId,\\n            getAnswer[_roundId],\\n            getTimestamp[_roundId],\\n            getTimestamp[_roundId],\\n            _roundId\\n        );\\n    }\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)\\n    {\\n        return (\\n            uint80(latestRound),\\n            latestAnswer,\\n            latestTimestamp,\\n            latestTimestamp,\\n            uint80(latestRound)\\n        );\\n    }\\n\\n    function description() external pure returns (string memory) {\\n        return \\\"v3 aggregator\\\";\\n    }\\n\\n    function version() external pure returns (uint256) {\\n        return 2;\\n    }\\n}\\n\",\"keccak256\":\"0x0f88071d39eefd9fddba277424f664d6c10569fd070cbbee814967e137149784\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161093c38038061093c83398181016040528101906100329190610129565b816000806101000a81548160ff021916908360ff16021790555080600181905550426002819055506001600381905550806004600060018152602001908152602001600020819055504260056000600181526020019081526020016000208190555060016006600060018152602001908152602001600020819055505050610169565b600080fd5b600060ff82169050919050565b6100d0816100ba565b81146100db57600080fd5b50565b6000815190506100ed816100c7565b92915050565b6000819050919050565b610106816100f3565b811461011157600080fd5b50565b600081519050610123816100fd565b92915050565b600080604083850312156101405761013f6100b5565b5b600061014e858286016100de565b925050602061015f85828601610114565b9150509250929050565b6107c4806101786000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638f1327c0116100715780638f1327c01461016d5780639a6fc8f51461019d578063a87a20ce146101d1578063b5ab58dc146101ed578063b633620c1461021d578063feaf968c1461024d576100b4565b8063313ce567146100b957806350d25bcd146100d757806354fd4d50146100f5578063668a0f02146101135780637284e416146101315780638205bf6a1461014f575b600080fd5b6100c161026f565b6040516100ce919061045a565b60405180910390f35b6100df610280565b6040516100ec919061048e565b60405180910390f35b6100fd610286565b60405161010a91906104c2565b60405180910390f35b61011b61028f565b60405161012891906104c2565b60405180910390f35b610139610295565b604051610146919061056d565b60405180910390f35b6101576102d2565b60405161016491906104c2565b60405180910390f35b610187600480360381019061018291906105c0565b6102d8565b60405161019491906104c2565b60405180910390f35b6101b760048036038101906101b2919061062f565b6102f0565b6040516101c895949392919061066b565b60405180910390f35b6101eb60048036038101906101e691906106ea565b61036d565b005b610207600480360381019061020291906105c0565b6103e6565b604051610214919061048e565b60405180910390f35b610237600480360381019061023291906105c0565b6103fe565b60405161024491906104c2565b60405180910390f35b610255610416565b60405161026695949392919061066b565b60405180910390f35b60008054906101000a900460ff1681565b60015481565b60006002905090565b60035481565b60606040518060400160405280600d81526020017f76332061676772656761746f7200000000000000000000000000000000000000815250905090565b60025481565b60066020528060005260406000206000915090505481565b600080600080600085600460008869ffffffffffffffffffff16815260200190815260200160002054600560008969ffffffffffffffffffff16815260200190815260200160002054600560008a69ffffffffffffffffffff16815260200190815260200160002054899450945094509450945091939590929450565b80600181905550426002819055506003600081548092919061038e90610746565b9190505550806004600060035481526020019081526020016000208190555042600560006003548152602001908152602001600020819055506003546006600060035481526020019081526020016000208190555050565b60046020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6000806000806000600354600154600254600254600354945094509450945094509091929394565b600060ff82169050919050565b6104548161043e565b82525050565b600060208201905061046f600083018461044b565b92915050565b6000819050919050565b61048881610475565b82525050565b60006020820190506104a3600083018461047f565b92915050565b6000819050919050565b6104bc816104a9565b82525050565b60006020820190506104d760008301846104b3565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105175780820151818401526020810190506104fc565b60008484015250505050565b6000601f19601f8301169050919050565b600061053f826104dd565b61054981856104e8565b93506105598185602086016104f9565b61056281610523565b840191505092915050565b600060208201905081810360008301526105878184610534565b905092915050565b600080fd5b61059d816104a9565b81146105a857600080fd5b50565b6000813590506105ba81610594565b92915050565b6000602082840312156105d6576105d561058f565b5b60006105e4848285016105ab565b91505092915050565b600069ffffffffffffffffffff82169050919050565b61060c816105ed565b811461061757600080fd5b50565b60008135905061062981610603565b92915050565b6000602082840312156106455761064461058f565b5b60006106538482850161061a565b91505092915050565b610665816105ed565b82525050565b600060a082019050610680600083018861065c565b61068d602083018761047f565b61069a60408301866104b3565b6106a760608301856104b3565b6106b4608083018461065c565b9695505050505050565b6106c781610475565b81146106d257600080fd5b50565b6000813590506106e4816106be565b92915050565b600060208284031215610700576106ff61058f565b5b600061070e848285016106d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610751826104a9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361078357610782610717565b5b60018201905091905056fea2646970667358221220ef1f0f8961d58384126a2365f3cafa8fd950bdb8dce82f956ce5cffd0c00b65b64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80638f1327c0116100715780638f1327c01461016d5780639a6fc8f51461019d578063a87a20ce146101d1578063b5ab58dc146101ed578063b633620c1461021d578063feaf968c1461024d576100b4565b8063313ce567146100b957806350d25bcd146100d757806354fd4d50146100f5578063668a0f02146101135780637284e416146101315780638205bf6a1461014f575b600080fd5b6100c161026f565b6040516100ce919061045a565b60405180910390f35b6100df610280565b6040516100ec919061048e565b60405180910390f35b6100fd610286565b60405161010a91906104c2565b60405180910390f35b61011b61028f565b60405161012891906104c2565b60405180910390f35b610139610295565b604051610146919061056d565b60405180910390f35b6101576102d2565b60405161016491906104c2565b60405180910390f35b610187600480360381019061018291906105c0565b6102d8565b60405161019491906104c2565b60405180910390f35b6101b760048036038101906101b2919061062f565b6102f0565b6040516101c895949392919061066b565b60405180910390f35b6101eb60048036038101906101e691906106ea565b61036d565b005b610207600480360381019061020291906105c0565b6103e6565b604051610214919061048e565b60405180910390f35b610237600480360381019061023291906105c0565b6103fe565b60405161024491906104c2565b60405180910390f35b610255610416565b60405161026695949392919061066b565b60405180910390f35b60008054906101000a900460ff1681565b60015481565b60006002905090565b60035481565b60606040518060400160405280600d81526020017f76332061676772656761746f7200000000000000000000000000000000000000815250905090565b60025481565b60066020528060005260406000206000915090505481565b600080600080600085600460008869ffffffffffffffffffff16815260200190815260200160002054600560008969ffffffffffffffffffff16815260200190815260200160002054600560008a69ffffffffffffffffffff16815260200190815260200160002054899450945094509450945091939590929450565b80600181905550426002819055506003600081548092919061038e90610746565b9190505550806004600060035481526020019081526020016000208190555042600560006003548152602001908152602001600020819055506003546006600060035481526020019081526020016000208190555050565b60046020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6000806000806000600354600154600254600254600354945094509450945094509091929394565b600060ff82169050919050565b6104548161043e565b82525050565b600060208201905061046f600083018461044b565b92915050565b6000819050919050565b61048881610475565b82525050565b60006020820190506104a3600083018461047f565b92915050565b6000819050919050565b6104bc816104a9565b82525050565b60006020820190506104d760008301846104b3565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105175780820151818401526020810190506104fc565b60008484015250505050565b6000601f19601f8301169050919050565b600061053f826104dd565b61054981856104e8565b93506105598185602086016104f9565b61056281610523565b840191505092915050565b600060208201905081810360008301526105878184610534565b905092915050565b600080fd5b61059d816104a9565b81146105a857600080fd5b50565b6000813590506105ba81610594565b92915050565b6000602082840312156105d6576105d561058f565b5b60006105e4848285016105ab565b91505092915050565b600069ffffffffffffffffffff82169050919050565b61060c816105ed565b811461061757600080fd5b50565b60008135905061062981610603565b92915050565b6000602082840312156106455761064461058f565b5b60006106538482850161061a565b91505092915050565b610665816105ed565b82525050565b600060a082019050610680600083018861065c565b61068d602083018761047f565b61069a60408301866104b3565b6106a760608301856104b3565b6106b4608083018461065c565b9695505050505050565b6106c781610475565b81146106d257600080fd5b50565b6000813590506106e4816106be565b92915050565b600060208284031215610700576106ff61058f565b5b600061070e848285016106d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610751826104a9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361078357610782610717565b5b60018201905091905056fea2646970667358221220ef1f0f8961d58384126a2365f3cafa8fd950bdb8dce82f956ce5cffd0c00b65b64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 52,
        "contract": "contracts/mocks/MockV3Aggregator.sol:MockV3Aggregator",
        "label": "decimals",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 54,
        "contract": "contracts/mocks/MockV3Aggregator.sol:MockV3Aggregator",
        "label": "latestAnswer",
        "offset": 0,
        "slot": "1",
        "type": "t_int256"
      },
      {
        "astId": 56,
        "contract": "contracts/mocks/MockV3Aggregator.sol:MockV3Aggregator",
        "label": "latestTimestamp",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 58,
        "contract": "contracts/mocks/MockV3Aggregator.sol:MockV3Aggregator",
        "label": "latestRound",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 62,
        "contract": "contracts/mocks/MockV3Aggregator.sol:MockV3Aggregator",
        "label": "getAnswer",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_int256)"
      },
      {
        "astId": 66,
        "contract": "contracts/mocks/MockV3Aggregator.sol:MockV3Aggregator",
        "label": "getTimestamp",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/mocks/MockV3Aggregator.sol:MockV3Aggregator",
        "label": "getRound",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_uint256)"
      }
    ],
    "types": {
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint256,t_int256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => int256)",
        "numberOfBytes": "32",
        "value": "t_int256"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}